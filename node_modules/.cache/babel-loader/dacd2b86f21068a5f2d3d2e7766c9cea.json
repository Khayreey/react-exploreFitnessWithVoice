{"ast":null,"code":"var _jsxFileName = \"H:\\\\React\\\\FREE-CODE-CAMP\\\\fitness\\\\src\\\\components\\\\SearchExercices.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Stack, Box, Button, TextField, Typography } from '@mui/material';\nimport { exGetOptions, fetchData } from '../utils/fetchData';\nimport Categories from './Categories';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchExercices = props => {\n  _s();\n\n  const [search, setSearch] = useState(''); //const [searchedExercices , setSearchedExercices] = useState([])\n\n  const [bodyParts, setBodyParts] = useState([]);\n  useEffect(() => {\n    const fetchExCategories = async () => {\n      const categoriesData = await fetchData('https://exercisedb.p.rapidapi.com/exercises/bodyPartList', exGetOptions);\n      setBodyParts(['all', ...categoriesData]);\n    };\n\n    fetchExCategories();\n  }, []);\n\n  const searchHandler = () => {\n    props.searchHandler(search);\n    setSearch('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    alignItems: \"center\",\n    mt: 30,\n    justifyContent: \"center\",\n    width: \"100%\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      fontWeight: 900,\n      sx: {\n        fontSize: {\n          lg: '48px',\n          sm: '32px',\n          xs: '24px'\n        }\n      },\n      color: \"#131429\",\n      textAlign: \"center\",\n      children: [\"Effective Exercices You \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 76\n      }, this), \" Should Explore\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      position: \"relative\",\n      mb: \"72px\",\n      style: {\n        width: '85%',\n        marginTop: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        sx: {\n          label: {\n            color: props.searchError ? 'red' : '#131429',\n            fontSize: {\n              lg: '20px',\n              sm: '16px'\n            }\n          },\n          input: {\n            backgroundColor: '#fff',\n            fontWeight: '700',\n            fontSize: \"24px\",\n            color: '#131429'\n          },\n          width: '100%'\n        },\n        variant: \"filled\",\n        label: props.searchError ? 'How Search for Empty Exercise ?' : 'Search Exercices...',\n        height: \"70px\",\n        type: \"text\",\n        value: props.search,\n        onChange: e => {\n          setSearch(e.target.value.toLowerCase());\n        },\n        onFocus: () => {\n          props.setSearchError(false);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: search,\n        className: \"search-btn\",\n        sx: {\n          bgcolor: '#131429',\n          color: '#fff',\n          textTransform: 'none',\n          width: {\n            lg: '173px',\n            xs: '80px'\n          },\n          height: '100%',\n          position: 'absolute',\n          right: '0px',\n          fontSize: {\n            lg: '28px',\n            xs: '20px'\n          }\n        },\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Categories, {\n      setExercices: props.setExercices,\n      data: bodyParts,\n      bodyPart: props.bodyPart,\n      setBodyPart: props.setBodyPart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SearchExercices, \"hdDf5dPmFr7oTSocbIsXqRzm/vM=\");\n\n_c = SearchExercices;\nexport default SearchExercices;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchExercices\");","map":{"version":3,"names":["React","useEffect","useState","Stack","Box","Button","TextField","Typography","exGetOptions","fetchData","Categories","SearchExercices","props","search","setSearch","bodyParts","setBodyParts","fetchExCategories","categoriesData","searchHandler","fontSize","lg","sm","xs","width","marginTop","label","color","searchError","input","backgroundColor","fontWeight","e","target","value","toLowerCase","setSearchError","bgcolor","textTransform","height","position","right","setExercices","bodyPart","setBodyPart"],"sources":["H:/React/FREE-CODE-CAMP/fitness/src/components/SearchExercices.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Stack, Box, Button, TextField, Typography } from '@mui/material'\nimport {exGetOptions,fetchData} from '../utils/fetchData'\nimport Categories from './Categories'\n\n\nconst SearchExercices = (props) => {\n\n    const [search , setSearch] = useState('')\n    //const [searchedExercices , setSearchedExercices] = useState([])\n    const [bodyParts , setBodyParts] = useState([])\n    useEffect(()=>{\n        const fetchExCategories = async ()=> {\n            const categoriesData = await fetchData('https://exercisedb.p.rapidapi.com/exercises/bodyPartList', exGetOptions) \n            setBodyParts(['all' , ...categoriesData])\n            \n        }\n        fetchExCategories()\n    },[])\n   const searchHandler = ()=> {\n    props.searchHandler(search)\n    setSearch('')\n   }\n    return (\n        <Stack   alignItems='center' mt={30} justifyContent='center' width=\"100%\">\n            <Typography\n                fontWeight={900}\n                sx={{ fontSize: { lg: '48px', sm: '32px', xs: '24px' } }}\n                color='#131429' textAlign='center'>Effective Exercices You <br /> Should Explore</Typography>\n            <Box  position=\"relative\" mb=\"72px\" style={{width : '85%' , marginTop : '1rem'}}>\n                <TextField\n                    sx={{\n                        label: {\n                            color: props.searchError ? 'red' : '#131429',\n                            fontSize: {lg :'20px' , sm : '16px' },\n                        },\n                        input: {\n                            backgroundColor :'#fff',\n                            fontWeight: '700',\n                            fontSize: \"24px\",\n                            color: '#131429',\n\n                        },\n                         width: '100%'\n                    }}\n                    variant=\"filled\" label= {props.searchError ? 'How Search for Empty Exercise ?' : 'Search Exercices...'} \n                    height='70px'\n                    type='text'\n                    value={props.search}\n                    onChange={(e)=> {setSearch(e.target.value.toLowerCase())}}\n                    onFocus={()=>{props.setSearchError(false)}}\n                />\n                <Button \n                onClick={search}\n                className=\"search-btn\" sx={{ bgcolor: '#131429', color: '#fff', textTransform: 'none', width: { lg: '173px', xs: '80px' }, height: '100%', position: 'absolute', right: '0px', fontSize: { lg: '28px', xs: '20px' } }}>\n                    Search\n                </Button>\n            </Box>\n            <Categories setExercices={props.setExercices} data={bodyParts} bodyPart={props.bodyPart} setBodyPart={props.setBodyPart}></Categories>\n        </Stack>\n    )\n}\n\nexport default SearchExercices"],"mappings":"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"},"metadata":{},"sourceType":"module"}