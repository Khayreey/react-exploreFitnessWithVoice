{"ast":null,"code":"var _jsxFileName = \"H:\\\\React\\\\FREE-CODE-CAMP\\\\fitness\\\\src\\\\components\\\\Exercices.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Pagination from '@mui/material/Pagination';\nimport { Box, Stack, Typography } from '@mui/material';\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport ExerciceCard from './ExerciceCard';\nimport MicrophoneSearch from './MicrophoneSearch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Exercices = props => {\n  _s();\n\n  const [currentPage, setCurrentPage] = useState(1);\n  useEffect(() => {});\n\n  const paginationHandler = (event, value) => {\n    setCurrentPage(value);\n    window.scrollTo({\n      top: 1300,\n      behavior: 'smooth'\n    });\n  }; //define the number of exercices per page \n\n\n  const numberOfExercicesPerPage = 9; // calculate the number of  pages (pagination take it in count property to display the number of pages)\n\n  const numberOfPages = Math.ceil(props.exercices.length / numberOfExercicesPerPage); // calculate the last index of current page \n\n  const lastExercsiceIndex = numberOfExercicesPerPage * currentPage; // calculate the first index of current page \n\n  const firstExerciseIndex = lastExercsiceIndex - numberOfExercicesPerPage; // calculate the shown exercise according to first and last index and currentPage\n\n  const ExercicesOfCurrentPage = props.exercices.slice(firstExerciseIndex, lastExercsiceIndex); // and instead of map over all exercices map over  ExercicesOfCurrentPage\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    id: \"exercices\",\n    mt: \"50px\",\n    p: \"15px\",\n    position: \"relative\",\n    children: [props.exercices.length > 0 && /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      fontWeight: \"700\",\n      mb: \"50px\",\n      color: \"#131429\",\n      boxShadow: \"0px 5px 5px  gray\",\n      borderRadius: 10,\n      padding: 2,\n      sx: {\n        textAlign: 'center'\n      },\n      children: [\" Results : \", `\"${props.searchKeyWord}\"`]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 15\n    }, this), props.noExercisesFound && /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      fontWeight: \"700\",\n      mb: \"50px\",\n      color: \"#131429\",\n      boxShadow: \"0px 5px 5px  gray\",\n      borderRadius: 10,\n      padding: 2,\n      sx: {\n        textAlign: 'center'\n      },\n      children: [\"No Result Found : \", `\"${props.searchKeyWord}\"`]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 43\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"row\",\n      sx: {\n        gap: '50px'\n      },\n      flexWrap: \"wrap\",\n      justifyContent: \"center\",\n      children: ExercicesOfCurrentPage.map((ex, index) => {\n        return /*#__PURE__*/_jsxDEV(ExerciceCard, {\n          ex: ex\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"row\",\n      justifyContent: \"center\",\n      mt: \"50px\",\n      children: [props.isLoad && /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 33\n      }, this), props.exercices.length > 9 && /*#__PURE__*/_jsxDEV(Pagination, {\n        color: \"primary\",\n        variant: \"outlined\",\n        size: \"large\",\n        defaultPage: 1,\n        page: currentPage,\n        onChange: (e, v) => paginationHandler(e, v),\n        count: numberOfPages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MicrophoneSearch, {\n      searchHandler: props.searchHandler,\n      setSearchKeyWord: props.setSearchKeyWord,\n      setExercices: props.setExercices,\n      setIsLoad: props.setIsLoad,\n      setNoExercisesFound: props.setNoExercisesFound\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Exercices, \"0B/VKjvNRjGdAm9vDU8xExa41aw=\");\n\n_c = Exercices;\nexport default Exercices;\n\nvar _c;\n\n$RefreshReg$(_c, \"Exercices\");","map":{"version":3,"names":["React","useEffect","useState","Pagination","Box","Stack","Typography","CircularProgress","ExerciceCard","MicrophoneSearch","Exercices","props","currentPage","setCurrentPage","paginationHandler","event","value","window","scrollTo","top","behavior","numberOfExercicesPerPage","numberOfPages","Math","ceil","exercices","length","lastExercsiceIndex","firstExerciseIndex","ExercicesOfCurrentPage","slice","textAlign","searchKeyWord","noExercisesFound","gap","map","ex","index","isLoad","e","v","searchHandler","setSearchKeyWord","setExercices","setIsLoad","setNoExercisesFound"],"sources":["H:/React/FREE-CODE-CAMP/fitness/src/components/Exercices.js"],"sourcesContent":["import React , {useEffect , useState} from 'react'\nimport Pagination from '@mui/material/Pagination'\nimport {Box , Stack , Typography }  from '@mui/material'\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport ExerciceCard from './ExerciceCard'\nimport MicrophoneSearch from './MicrophoneSearch'\nconst Exercices = (props) => {\n    const [currentPage , setCurrentPage] = useState(1)\n\n    useEffect(()=> {} )\n\n    const paginationHandler=(event,value)=>{\n        setCurrentPage(value)\n        window.scrollTo({top : 1300 , behavior : 'smooth'})\n    }\n\n    //define the number of exercices per page \n    const numberOfExercicesPerPage = 9 \n     // calculate the number of  pages (pagination take it in count property to display the number of pages)\n    const numberOfPages = Math.ceil(props.exercices.length / numberOfExercicesPerPage)\n    // calculate the last index of current page \n    const lastExercsiceIndex = numberOfExercicesPerPage * currentPage \n    // calculate the first index of current page \n    const firstExerciseIndex = lastExercsiceIndex - numberOfExercicesPerPage \n    // calculate the shown exercise according to first and last index and currentPage\n    const ExercicesOfCurrentPage = props.exercices.slice(firstExerciseIndex , lastExercsiceIndex)\n    // and instead of map over all exercices map over  ExercicesOfCurrentPage\n    return (\n        <Box id='exercices' mt='50px' p='15px' position='relative'>\n             {props.exercices.length > 0 && \n             (<Typography variant='h4'fontWeight='700' mb='50px' color='#131429'boxShadow='0px 5px 5px  gray'\n             borderRadius={10}\n             padding={2} sx={{textAlign:'center'}}> Results : {`\"${props.searchKeyWord}\"`}</Typography>)\n             }\n             { props.noExercisesFound && (<Typography variant='h4'fontWeight='700' mb='50px' color='#131429'boxShadow='0px 5px 5px  gray'\n             borderRadius={10}\n             padding={2} sx={{textAlign:'center'}}>No Result Found : {`\"${props.searchKeyWord}\"`}</Typography>) }\n\n            <Stack direction='row' sx={{gap : '50px'}} flexWrap='wrap' justifyContent='center'>\n                {ExercicesOfCurrentPage.map((ex , index)=>{\n                    return(\n                        <ExerciceCard ex={ex} key={index}></ExerciceCard>\n                    )\n                })}\n            </Stack>\n            \n            <Stack direction='row' justifyContent='center' mt='50px'>\n               {props.isLoad && <CircularProgress></CircularProgress>}\n               {props.exercices.length > 9 &&\n                (<Pagination color=\"primary\" variant=\"outlined\" size=\"large\" defaultPage={1}\n                page={currentPage}\n                onChange={(e,v)=> paginationHandler(e,v)}\n                count={numberOfPages}\n                />)\n               }\n            </Stack>\n            \n            <MicrophoneSearch \n            searchHandler={props.searchHandler}\n            setSearchKeyWord={props.setSearchKeyWord} setExercices={props.setExercices} setIsLoad={props.setIsLoad} setNoExercisesFound={props.setNoExercisesFound}></MicrophoneSearch>\n        </Box>\n    )\n}\n\nexport default Exercices"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA4BC,QAA5B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAAQC,GAAR,EAAcC,KAAd,EAAsBC,UAAtB,QAAyC,eAAzC;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;;AACA,MAAMC,SAAS,GAAIC,KAAD,IAAW;EAAA;;EACzB,MAAM,CAACC,WAAD,EAAeC,cAAf,IAAiCX,QAAQ,CAAC,CAAD,CAA/C;EAEAD,SAAS,CAAC,MAAK,CAAE,CAAR,CAAT;;EAEA,MAAMa,iBAAiB,GAAC,CAACC,KAAD,EAAOC,KAAP,KAAe;IACnCH,cAAc,CAACG,KAAD,CAAd;IACAC,MAAM,CAACC,QAAP,CAAgB;MAACC,GAAG,EAAG,IAAP;MAAcC,QAAQ,EAAG;IAAzB,CAAhB;EACH,CAHD,CALyB,CAUzB;;;EACA,MAAMC,wBAAwB,GAAG,CAAjC,CAXyB,CAYxB;;EACD,MAAMC,aAAa,GAAGC,IAAI,CAACC,IAAL,CAAUb,KAAK,CAACc,SAAN,CAAgBC,MAAhB,GAAyBL,wBAAnC,CAAtB,CAbyB,CAczB;;EACA,MAAMM,kBAAkB,GAAGN,wBAAwB,GAAGT,WAAtD,CAfyB,CAgBzB;;EACA,MAAMgB,kBAAkB,GAAGD,kBAAkB,GAAGN,wBAAhD,CAjByB,CAkBzB;;EACA,MAAMQ,sBAAsB,GAAGlB,KAAK,CAACc,SAAN,CAAgBK,KAAhB,CAAsBF,kBAAtB,EAA2CD,kBAA3C,CAA/B,CAnByB,CAoBzB;;EACA,oBACI,QAAC,GAAD;IAAK,EAAE,EAAC,WAAR;IAAoB,EAAE,EAAC,MAAvB;IAA8B,CAAC,EAAC,MAAhC;IAAuC,QAAQ,EAAC,UAAhD;IAAA,WACMhB,KAAK,CAACc,SAAN,CAAgBC,MAAhB,GAAyB,CAAzB,iBACA,QAAC,UAAD;MAAY,OAAO,EAAC,IAApB;MAAwB,UAAU,EAAC,KAAnC;MAAyC,EAAE,EAAC,MAA5C;MAAmD,KAAK,EAAC,SAAzD;MAAkE,SAAS,EAAC,mBAA5E;MACD,YAAY,EAAE,EADb;MAED,OAAO,EAAE,CAFR;MAEW,EAAE,EAAE;QAACK,SAAS,EAAC;MAAX,CAFf;MAAA,0BAEkD,IAAGpB,KAAK,CAACqB,aAAc,GAFzE;IAAA;MAAA;MAAA;MAAA;IAAA,QAFN,EAMOrB,KAAK,CAACsB,gBAAN,iBAA2B,QAAC,UAAD;MAAY,OAAO,EAAC,IAApB;MAAwB,UAAU,EAAC,KAAnC;MAAyC,EAAE,EAAC,MAA5C;MAAmD,KAAK,EAAC,SAAzD;MAAkE,SAAS,EAAC,mBAA5E;MAC7B,YAAY,EAAE,EADe;MAE7B,OAAO,EAAE,CAFoB;MAEjB,EAAE,EAAE;QAACF,SAAS,EAAC;MAAX,CAFa;MAAA,iCAE6B,IAAGpB,KAAK,CAACqB,aAAc,GAFpD;IAAA;MAAA;MAAA;MAAA;IAAA,QANlC,eAUI,QAAC,KAAD;MAAO,SAAS,EAAC,KAAjB;MAAuB,EAAE,EAAE;QAACE,GAAG,EAAG;MAAP,CAA3B;MAA2C,QAAQ,EAAC,MAApD;MAA2D,cAAc,EAAC,QAA1E;MAAA,UACKL,sBAAsB,CAACM,GAAvB,CAA2B,CAACC,EAAD,EAAMC,KAAN,KAAc;QACtC,oBACI,QAAC,YAAD;UAAc,EAAE,EAAED;QAAlB,GAA2BC,KAA3B;UAAA;UAAA;UAAA;QAAA,QADJ;MAGH,CAJA;IADL;MAAA;MAAA;MAAA;IAAA,QAVJ,eAkBI,QAAC,KAAD;MAAO,SAAS,EAAC,KAAjB;MAAuB,cAAc,EAAC,QAAtC;MAA+C,EAAE,EAAC,MAAlD;MAAA,WACI1B,KAAK,CAAC2B,MAAN,iBAAgB,QAAC,gBAAD;QAAA;QAAA;QAAA;MAAA,QADpB,EAEI3B,KAAK,CAACc,SAAN,CAAgBC,MAAhB,GAAyB,CAAzB,iBACC,QAAC,UAAD;QAAY,KAAK,EAAC,SAAlB;QAA4B,OAAO,EAAC,UAApC;QAA+C,IAAI,EAAC,OAApD;QAA4D,WAAW,EAAE,CAAzE;QACD,IAAI,EAAEd,WADL;QAED,QAAQ,EAAE,CAAC2B,CAAD,EAAGC,CAAH,KAAQ1B,iBAAiB,CAACyB,CAAD,EAAGC,CAAH,CAFlC;QAGD,KAAK,EAAElB;MAHN;QAAA;QAAA;QAAA;MAAA,QAHL;IAAA;MAAA;MAAA;MAAA;IAAA,QAlBJ,eA6BI,QAAC,gBAAD;MACA,aAAa,EAAEX,KAAK,CAAC8B,aADrB;MAEA,gBAAgB,EAAE9B,KAAK,CAAC+B,gBAFxB;MAE0C,YAAY,EAAE/B,KAAK,CAACgC,YAF9D;MAE4E,SAAS,EAAEhC,KAAK,CAACiC,SAF7F;MAEwG,mBAAmB,EAAEjC,KAAK,CAACkC;IAFnI;MAAA;MAAA;MAAA;IAAA,QA7BJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAmCH,CAxDD;;GAAMnC,S;;KAAAA,S;AA0DN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}