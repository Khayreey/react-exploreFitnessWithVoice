{"ast":null,"code":"var _jsxFileName = \"H:\\\\React\\\\FREE-CODE-CAMP\\\\fitness\\\\src\\\\components\\\\Exercices.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Pagination from '@mui/material/Pagination';\nimport { Box, Stack, Typography } from '@mui/material';\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport ExerciceCard from './ExerciceCard';\nimport MicrophoneSearch from './MicrophoneSearch';\nimport { exGetOptions, fetchData } from '../utils/fetchData';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Exercices = props => {\n  _s();\n\n  const [currentPage, setCurrentPage] = useState(1);\n  useEffect(() => {\n    const getData = async () => {\n      props.setIsLoad(true);\n\n      if (!props.searchKeyWord) {\n        if (props.bodyPart === 'all') {\n          const exData = await fetchData('https://exercisedb.p.rapidapi.com/exercises', exGetOptions);\n          props.setExercices(exData);\n        } else {\n          const exData = await fetchData(`https://exercisedb.p.rapidapi.com/exercises/bodyPart/${props.bodyPart}`, exGetOptions);\n          props.setExercices(exData);\n        }\n      } else {\n        const exData = await fetchData('https://exercisedb.p.rapidapi.com/exercises', exGetOptions);\n        const searchedExercices = props.bodyPart === \"all\" ? exData.filter(ex => ex.name.toLowerCase().includes(props.searchKeyWord) || ex.target.toLowerCase().includes(props.searchKeyWord) || ex.equipment.toLowerCase().includes(props.searchKeyWord) || ex.bodyPart.toLowerCase().includes(props.searchKeyWord)) : exData.filter(ex => ex.name.toLowerCase().includes(props.searchKeyWord) || ex.target.toLowerCase().includes(props.searchKeyWord) || ex.equipment.toLowerCase().includes(props.searchKeyWord) || ex.bodyPart.toLowerCase().includes(props.searchKeyWord)).filter(e => e.bodyPart === props.bodyPart);\n        props.setExercices(searchedExercices);\n      }\n    };\n\n    getData();\n    props.setIsLoad(false);\n  }, [props.bodyPart, props.searchKeyWord]);\n\n  const paginationHandler = (event, value) => {\n    setCurrentPage(value);\n    window.scrollTo({\n      top: 1300,\n      behavior: 'smooth'\n    });\n  }; //define the number of exercices per page \n\n\n  const numberOfExercicesPerPage = 9; // calculate the number of  pages (pagination take it in count property to display the number of pages)\n\n  const numberOfPages = Math.ceil(props.exercices.length / numberOfExercicesPerPage); // calculate the last index of current page \n\n  const lastExercsiceIndex = numberOfExercicesPerPage * currentPage; // calculate the first index of current page \n\n  const firstExerciseIndex = lastExercsiceIndex - numberOfExercicesPerPage; // calculate the shown exercise according to first and last index and currentPage\n\n  const ExercicesOfCurrentPage = props.exercices.slice(firstExerciseIndex, lastExercsiceIndex); // and instead of map over all exercices map over  ExercicesOfCurrentPage\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    id: \"exercices\",\n    mt: \"50px\",\n    p: \"15px\",\n    position: \"relative\",\n    children: [/*#__PURE__*/_jsxDEV(Stack, {\n      children: [props.searchKeyWord && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          fontWeight: '700',\n          mb: '50px',\n          color: '#131429',\n          boxShadow: '0px 5px 5px  gray'\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          borderRadius: 10,\n          padding: 2,\n          sx: {\n            textAlign: 'center'\n          },\n          children: props.exercices.length > 0 ? `Results : \"${props.searchKeyWord}\"` : props.noExercisesFound && `No Result Found : \"${props.searchKeyWord}\"`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 16\n      }, this), props.isLoad && /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"row\",\n      sx: {\n        gap: '50px'\n      },\n      flexWrap: \"wrap\",\n      justifyContent: \"center\",\n      children: ExercicesOfCurrentPage.map((ex, index) => {\n        return /*#__PURE__*/_jsxDEV(ExerciceCard, {\n          ex: ex\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"row\",\n      justifyContent: \"center\",\n      mt: \"50px\",\n      children: props.exercices.length > 9 && /*#__PURE__*/_jsxDEV(Pagination, {\n        color: \"primary\",\n        variant: \"outlined\",\n        size: \"large\",\n        defaultPage: 1,\n        page: currentPage,\n        onChange: (e, v) => paginationHandler(e, v),\n        count: numberOfPages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MicrophoneSearch, {\n      searchHandler: props.searchHandler,\n      setSearchKeyWord: props.setSearchKeyWord,\n      setExercices: props.setExercices,\n      setIsLoad: props.setIsLoad,\n      setNoExercisesFound: props.setNoExercisesFound\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Exercices, \"0B/VKjvNRjGdAm9vDU8xExa41aw=\");\n\n_c = Exercices;\nexport default Exercices;\n\nvar _c;\n\n$RefreshReg$(_c, \"Exercices\");","map":{"version":3,"names":["React","useEffect","useState","Pagination","Box","Stack","Typography","CircularProgress","ExerciceCard","MicrophoneSearch","exGetOptions","fetchData","ClearIcon","Exercices","props","currentPage","setCurrentPage","getData","setIsLoad","searchKeyWord","bodyPart","exData","setExercices","searchedExercices","filter","ex","name","toLowerCase","includes","target","equipment","e","paginationHandler","event","value","window","scrollTo","top","behavior","numberOfExercicesPerPage","numberOfPages","Math","ceil","exercices","length","lastExercsiceIndex","firstExerciseIndex","ExercicesOfCurrentPage","slice","fontWeight","mb","color","boxShadow","textAlign","noExercisesFound","isLoad","gap","map","index","v","searchHandler","setSearchKeyWord","setNoExercisesFound"],"sources":["H:/React/FREE-CODE-CAMP/fitness/src/components/Exercices.js"],"sourcesContent":["import React , {useEffect , useState} from 'react'\nimport Pagination from '@mui/material/Pagination'\nimport {Box , Stack , Typography }  from '@mui/material'\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport ExerciceCard from './ExerciceCard'\nimport MicrophoneSearch from './MicrophoneSearch'\nimport {exGetOptions,fetchData} from '../utils/fetchData'\nimport ClearIcon from '@mui/icons-material/Clear';\nconst Exercices = (props) => {\n    const [currentPage , setCurrentPage] = useState(1)\n\n    useEffect(()=> {\n\n        const getData =  async ()=> {\n              props.setIsLoad(true)\n               if(!props.searchKeyWord)\n               {\n\n                if(props.bodyPart === 'all')\n                {\n                    const exData = await fetchData('https://exercisedb.p.rapidapi.com/exercises', exGetOptions) \n                    props.setExercices(exData)\n                }\n                else {\n                const exData = await fetchData(`https://exercisedb.p.rapidapi.com/exercises/bodyPart/${props.bodyPart}`, exGetOptions) \n                props.setExercices(exData)\n                }\n                \n               }\n               else {\n                const exData = await fetchData('https://exercisedb.p.rapidapi.com/exercises', exGetOptions) \n                const searchedExercices = props.bodyPart === \"all\" ? \n                exData.filter((ex)=>\n                ex.name.toLowerCase().includes(props.searchKeyWord)\n                ||  ex.target.toLowerCase().includes(props.searchKeyWord)   \n                ||  ex.equipment.toLowerCase().includes(props.searchKeyWord)   \n                ||  ex.bodyPart.toLowerCase().includes(props.searchKeyWord))  \n               :  exData.filter((ex)=>\n               ex.name.toLowerCase().includes(props.searchKeyWord)\n               ||  ex.target.toLowerCase().includes(props.searchKeyWord)   \n               ||  ex.equipment.toLowerCase().includes(props.searchKeyWord)   \n               ||  ex.bodyPart.toLowerCase().includes(props.searchKeyWord)).filter((e)=> e.bodyPart === props.bodyPart) \n               props.setExercices(searchedExercices)\n               }  \n        }\n        getData()\n        props.setIsLoad(false)\n         \n    } , [props.bodyPart , props.searchKeyWord])\n\n    const paginationHandler=(event,value)=>{\n        setCurrentPage(value)\n        window.scrollTo({top : 1300 , behavior : 'smooth'})\n    }\n\n    //define the number of exercices per page \n    const numberOfExercicesPerPage = 9 \n     // calculate the number of  pages (pagination take it in count property to display the number of pages)\n    const numberOfPages = Math.ceil(props.exercices.length / numberOfExercicesPerPage)\n    // calculate the last index of current page \n    const lastExercsiceIndex = numberOfExercicesPerPage * currentPage \n    // calculate the first index of current page \n    const firstExerciseIndex = lastExercsiceIndex - numberOfExercicesPerPage \n    // calculate the shown exercise according to first and last index and currentPage\n    const ExercicesOfCurrentPage = props.exercices.slice(firstExerciseIndex , lastExercsiceIndex)\n    // and instead of map over all exercices map over  ExercicesOfCurrentPage\n    return (\n        <Box id='exercices' mt='50px' p='15px' position='relative'>\n            <Stack>\n\n              {props.searchKeyWord && \n               <Box sx={{fontWeight:'700' , mb:'50px', color:'#131429' ,boxShadow:'0px 5px 5px  gray'}}>\n               <Typography variant='h4' \n               borderRadius={10}\n               padding={2} sx={{textAlign:'center'}}> \n               {props.exercices.length > 0 ?\n                `Results : \"${props.searchKeyWord}\"` :  props.noExercisesFound &&  `No Result Found : \"${props.searchKeyWord}\"`}\n               </Typography>\n               \n               </Box>\n              } \n            \n            {props.isLoad && <CircularProgress></CircularProgress>}\n            </Stack>\n            <Stack direction='row' sx={{gap : '50px'}} flexWrap='wrap' justifyContent='center'>\n                {ExercicesOfCurrentPage.map((ex , index)=>{\n                    return(\n                        <ExerciceCard ex={ex} key={index}></ExerciceCard>\n                    )\n                })}\n            </Stack>\n            \n            <Stack direction='row' justifyContent='center' mt='50px'>\n               {props.exercices.length > 9 &&\n                (<Pagination color=\"primary\" variant=\"outlined\" size=\"large\" defaultPage={1}\n                page={currentPage}\n                onChange={(e,v)=> paginationHandler(e,v)}\n                count={numberOfPages}\n                />)\n               }\n            </Stack>\n            \n            <MicrophoneSearch \n            searchHandler={props.searchHandler}\n            setSearchKeyWord={props.setSearchKeyWord} setExercices={props.setExercices} setIsLoad={props.setIsLoad} setNoExercisesFound={props.setNoExercisesFound}></MicrophoneSearch>\n        </Box>\n    )\n}\n\nexport default Exercices"],"mappings":"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"},"metadata":{},"sourceType":"module"}